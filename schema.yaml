openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/v1/audit-logs/:
    get:
      operationId: api_v1_audit_logs_list
      description: ViewSet for audit logs.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuditLogList'
          description: ''
  /api/v1/audit-logs/{id}/:
    get:
      operationId: api_v1_audit_logs_retrieve
      description: ViewSet for audit logs.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Audit Log.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLog'
          description: ''
  /api/v1/auth/login/:
    post:
      operationId: api_v1_auth_login_create
      description: Custom token view with audit logging.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/auth/logout/:
    post:
      operationId: api_v1_auth_logout_create
      description: View for user logout.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/refresh/:
    post:
      operationId: api_v1_auth_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/basemaps/:
    get:
      operationId: api_v1_basemaps_list
      description: ViewSet for managing basemaps.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBasemapList'
          description: ''
    post:
      operationId: api_v1_basemaps_create
      description: ViewSet for managing basemaps.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Basemap'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Basemap'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Basemap'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basemap'
          description: ''
  /api/v1/basemaps/{id}/:
    get:
      operationId: api_v1_basemaps_retrieve
      description: ViewSet for managing basemaps.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Basemap.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasemapDetail'
          description: ''
    put:
      operationId: api_v1_basemaps_update
      description: ViewSet for managing basemaps.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Basemap.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Basemap'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Basemap'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Basemap'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basemap'
          description: ''
    patch:
      operationId: api_v1_basemaps_partial_update
      description: ViewSet for managing basemaps.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Basemap.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBasemap'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBasemap'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBasemap'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basemap'
          description: ''
    delete:
      operationId: api_v1_basemaps_destroy
      description: ViewSet for managing basemaps.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Basemap.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/basemaps/{id}/preview/:
    get:
      operationId: api_v1_basemaps_preview_retrieve
      description: Generate preview HTML for the basemap.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Basemap.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basemap'
          description: ''
  /api/v1/basemaps/{id}/test_connection/:
    get:
      operationId: api_v1_basemaps_test_connection_retrieve
      description: Test if the basemap is accessible.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Basemap.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basemap'
          description: ''
  /api/v1/basemaps/{id}/upload_preview/:
    post:
      operationId: api_v1_basemaps_upload_preview_create
      description: Upload a preview image for a basemap.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Basemap.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Basemap'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Basemap'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Basemap'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basemap'
          description: ''
  /api/v1/client-projects/:
    get:
      operationId: api_v1_client_projects_list
      description: ViewSet for client project management.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClientProjectList'
          description: ''
    post:
      operationId: api_v1_client_projects_create
      description: ViewSet for client project management.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientProject'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProject'
          description: ''
  /api/v1/client-projects/{id}/:
    get:
      operationId: api_v1_client_projects_retrieve
      description: ViewSet for client project management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Client Project.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProject'
          description: ''
    put:
      operationId: api_v1_client_projects_update
      description: ViewSet for client project management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Client Project.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientProject'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProject'
          description: ''
    patch:
      operationId: api_v1_client_projects_partial_update
      description: ViewSet for client project management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Client Project.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClientProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClientProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClientProject'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProject'
          description: ''
    delete:
      operationId: api_v1_client_projects_destroy
      description: ViewSet for client project management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Client Project.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/client-projects/{id}/record_access/:
    post:
      operationId: api_v1_client_projects_record_access_create
      description: Record that a client accessed this project.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Client Project.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientProject'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProject'
          description: ''
  /api/v1/client-projects/batch_assign/:
    post:
      operationId: api_v1_client_projects_batch_assign_create
      description: Batch assign projects to clients.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientProject'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProject'
          description: ''
  /api/v1/clients/:
    get:
      operationId: api_v1_clients_list
      description: ViewSet for client management.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClientDetailList'
          description: ''
    post:
      operationId: api_v1_clients_create
      description: ViewSet for client management.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
  /api/v1/clients/{id}/:
    get:
      operationId: api_v1_clients_retrieve
      description: ViewSet for client management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Client.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDetail'
          description: ''
    put:
      operationId: api_v1_clients_update
      description: ViewSet for client management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Client.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    patch:
      operationId: api_v1_clients_partial_update
      description: ViewSet for client management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Client.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClient'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    delete:
      operationId: api_v1_clients_destroy
      description: ViewSet for client management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Client.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/clients/{id}/analytics/:
    get:
      operationId: api_v1_clients_analytics_retrieve
      description: Get client usage analytics.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Client.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
  /api/v1/clients/{id}/projects/:
    get:
      operationId: api_v1_clients_projects_retrieve
      description: Return the projects associated with this client.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Client.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
  /api/v1/clients/{id}/users/:
    get:
      operationId: api_v1_clients_users_retrieve
      description: Return the users associated with this client.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Client.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
  /api/v1/color-palettes/:
    get:
      operationId: api_v1_color_palettes_list
      description: ViewSet for managing color palettes.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedColorPaletteList'
          description: ''
    post:
      operationId: api_v1_color_palettes_create
      description: ViewSet for managing color palettes.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ColorPalette'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ColorPalette'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ColorPalette'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ColorPalette'
          description: ''
  /api/v1/color-palettes/{id}/:
    get:
      operationId: api_v1_color_palettes_retrieve
      description: ViewSet for managing color palettes.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Color Palette.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ColorPalette'
          description: ''
    put:
      operationId: api_v1_color_palettes_update
      description: ViewSet for managing color palettes.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Color Palette.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ColorPalette'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ColorPalette'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ColorPalette'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ColorPalette'
          description: ''
    patch:
      operationId: api_v1_color_palettes_partial_update
      description: ViewSet for managing color palettes.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Color Palette.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedColorPalette'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedColorPalette'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedColorPalette'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ColorPalette'
          description: ''
    delete:
      operationId: api_v1_color_palettes_destroy
      description: ViewSet for managing color palettes.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Color Palette.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/complete_upload/:
    post:
      operationId: api_v1_complete_upload_create
      description: Complete the file upload and import to a layer.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/constructor/{project_id}/:
    get:
      operationId: api_v1_constructor_retrieve
      description: |-
        Get complete project structure.
        Access via authenticated project_id or unauthenticated hash_code.
      parameters:
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/data/{layer_id}/:
    get:
      operationId: api_v1_data_retrieve
      description: Get layer data in chunks.
      parameters:
      - in: path
        name: layer_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/features/:
    get:
      operationId: api_v1_features_list
      description: Viewset for individual layer features.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSimpleFeatureList'
          description: ''
    post:
      operationId: api_v1_features_create
      description: Viewset for individual layer features.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Feature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Feature'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
  /api/v1/features/{id}/:
    get:
      operationId: api_v1_features_retrieve
      description: Viewset for individual layer features.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project layer data.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
    put:
      operationId: api_v1_features_update
      description: Viewset for individual layer features.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project layer data.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Feature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Feature'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
    patch:
      operationId: api_v1_features_partial_update
      description: Viewset for individual layer features.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project layer data.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeature'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
    delete:
      operationId: api_v1_features_destroy
      description: Viewset for individual layer features.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project layer data.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/health/:
    get:
      operationId: api_v1_health_retrieve
      description: Health check endpoint.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/layer-functions/:
    get:
      operationId: api_v1_layer_functions_list
      description: ViewSet for managing layer functions.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLayerFunctionList'
          description: ''
    post:
      operationId: api_v1_layer_functions_create
      description: ViewSet for managing layer functions.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayerFunction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LayerFunction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LayerFunction'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerFunction'
          description: ''
  /api/v1/layer-functions/{id}/:
    get:
      operationId: api_v1_layer_functions_retrieve
      description: ViewSet for managing layer functions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Layer Function.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerFunctionDetail'
          description: ''
    put:
      operationId: api_v1_layer_functions_update
      description: ViewSet for managing layer functions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Layer Function.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayerFunction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LayerFunction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LayerFunction'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerFunction'
          description: ''
    patch:
      operationId: api_v1_layer_functions_partial_update
      description: ViewSet for managing layer functions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Layer Function.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLayerFunction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLayerFunction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLayerFunction'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerFunction'
          description: ''
    delete:
      operationId: api_v1_layer_functions_destroy
      description: ViewSet for managing layer functions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Layer Function.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/layer-functions/{id}/code/:
    get:
      operationId: api_v1_layer_functions_code_retrieve
      description: Return the function code.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Layer Function.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerFunctionDetail'
          description: ''
  /api/v1/layer-functions/{id}/execute/:
    post:
      operationId: api_v1_layer_functions_execute_create
      description: Execute the function on a layer.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Layer Function.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayerFunction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LayerFunction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LayerFunction'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerFunction'
          description: ''
  /api/v1/layer-groups/:
    get:
      operationId: api_v1_layer_groups_list
      description: Viewset for layer groups.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectLayerGroupList'
          description: ''
    post:
      operationId: api_v1_layer_groups_create
      description: Viewset for layer groups.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectLayerGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectLayerGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectLayerGroup'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLayerGroup'
          description: ''
  /api/v1/layer-groups/{id}/:
    get:
      operationId: api_v1_layer_groups_retrieve
      description: Viewset for layer groups.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project layer group.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLayerGroup'
          description: ''
    put:
      operationId: api_v1_layer_groups_update
      description: Viewset for layer groups.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project layer group.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectLayerGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectLayerGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectLayerGroup'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLayerGroup'
          description: ''
    patch:
      operationId: api_v1_layer_groups_partial_update
      description: Viewset for layer groups.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project layer group.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectLayerGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectLayerGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectLayerGroup'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLayerGroup'
          description: ''
    delete:
      operationId: api_v1_layer_groups_destroy
      description: Viewset for layer groups.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project layer group.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/layer-permissions/:
    get:
      operationId: api_v1_layer_permissions_list
      description: Viewset for layer permissions.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLayerPermissionList'
          description: ''
    post:
      operationId: api_v1_layer_permissions_create
      description: Viewset for layer permissions.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayerPermission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LayerPermission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LayerPermission'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerPermission'
          description: ''
  /api/v1/layer-permissions/{id}/:
    get:
      operationId: api_v1_layer_permissions_retrieve
      description: Viewset for layer permissions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this layer permission.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerPermission'
          description: ''
    put:
      operationId: api_v1_layer_permissions_update
      description: Viewset for layer permissions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this layer permission.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayerPermission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LayerPermission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LayerPermission'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerPermission'
          description: ''
    patch:
      operationId: api_v1_layer_permissions_partial_update
      description: Viewset for layer permissions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this layer permission.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLayerPermission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLayerPermission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLayerPermission'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerPermission'
          description: ''
    delete:
      operationId: api_v1_layer_permissions_destroy
      description: Viewset for layer permissions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this layer permission.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/layer-types/:
    get:
      operationId: api_v1_layer_types_list
      description: Viewset for layer types.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLayerTypeList'
          description: ''
    post:
      operationId: api_v1_layer_types_create
      description: Viewset for layer types.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayerType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LayerType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LayerType'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerType'
          description: ''
  /api/v1/layer-types/{id}/:
    get:
      operationId: api_v1_layer_types_retrieve
      description: Viewset for layer types.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this layer type.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerType'
          description: ''
    put:
      operationId: api_v1_layer_types_update
      description: Viewset for layer types.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this layer type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayerType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LayerType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LayerType'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerType'
          description: ''
    patch:
      operationId: api_v1_layer_types_partial_update
      description: Viewset for layer types.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this layer type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLayerType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLayerType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLayerType'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerType'
          description: ''
    delete:
      operationId: api_v1_layer_types_destroy
      description: Viewset for layer types.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this layer type.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/layers/:
    get:
      operationId: api_v1_layers_list
      description: Viewset for project layers.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectLayerList'
          description: ''
    post:
      operationId: api_v1_layers_create
      description: Viewset for project layers.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectLayer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectLayer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectLayer'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLayer'
          description: ''
  /api/v1/layers/{id}/:
    get:
      operationId: api_v1_layers_retrieve
      description: Viewset for project layers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project layer.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLayer'
          description: ''
    put:
      operationId: api_v1_layers_update
      description: Viewset for project layers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project layer.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectLayer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectLayer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectLayer'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLayer'
          description: ''
    patch:
      operationId: api_v1_layers_partial_update
      description: Viewset for project layers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project layer.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectLayer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectLayer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectLayer'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLayer'
          description: ''
    delete:
      operationId: api_v1_layers_destroy
      description: Viewset for project layers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project layer.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/layers/{id}/buffer/:
    post:
      operationId: api_v1_layers_buffer_create
      description: Create buffer around features.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project layer.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectLayer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectLayer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectLayer'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLayer'
          description: ''
  /api/v1/layers/{id}/clear_data/:
    post:
      operationId: api_v1_layers_clear_data_create
      description: Remove all features from a layer.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project layer.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectLayer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectLayer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectLayer'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLayer'
          description: ''
  /api/v1/layers/{id}/data/:
    get:
      operationId: api_v1_layers_data_retrieve
      description: Get layer data in GeoJSON format.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project layer.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLayer'
          description: ''
  /api/v1/layers/{id}/export_geojson/:
    get:
      operationId: api_v1_layers_export_geojson_retrieve
      description: Export layer data as GeoJSON.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project layer.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLayer'
          description: ''
  /api/v1/layers/{id}/import_geojson/:
    post:
      operationId: api_v1_layers_import_geojson_create
      description: Import features from GeoJSON.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project layer.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectLayer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectLayer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectLayer'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLayer'
          description: ''
  /api/v1/layers/{id}/upload_shapefile/:
    post:
      operationId: api_v1_layers_upload_shapefile_create
      description: Import features from a shapefile.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project layer.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectLayer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectLayer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectLayer'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLayer'
          description: ''
  /api/v1/map-tools/:
    get:
      operationId: api_v1_map_tools_list
      description: ViewSet for managing map tools.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMapToolList'
          description: ''
    post:
      operationId: api_v1_map_tools_create
      description: ViewSet for managing map tools.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapTool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MapTool'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MapTool'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapTool'
          description: ''
  /api/v1/map-tools/{id}/:
    get:
      operationId: api_v1_map_tools_retrieve
      description: ViewSet for managing map tools.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Map Tool.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapToolDetail'
          description: ''
    put:
      operationId: api_v1_map_tools_update
      description: ViewSet for managing map tools.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Map Tool.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapTool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MapTool'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MapTool'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapTool'
          description: ''
    patch:
      operationId: api_v1_map_tools_partial_update
      description: ViewSet for managing map tools.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Map Tool.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMapTool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMapTool'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMapTool'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapTool'
          description: ''
    delete:
      operationId: api_v1_map_tools_destroy
      description: ViewSet for managing map tools.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Map Tool.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/map-tools/{id}/code/:
    get:
      operationId: api_v1_map_tools_code_retrieve
      description: Return the tool code.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Map Tool.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapToolDetail'
          description: ''
  /api/v1/markers/:
    get:
      operationId: api_v1_markers_list
      description: ViewSet for managing map markers.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMarkerLibraryList'
          description: ''
    post:
      operationId: api_v1_markers_create
      description: ViewSet for managing map markers.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkerLibrary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MarkerLibrary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MarkerLibrary'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkerLibrary'
          description: ''
  /api/v1/markers/{id}/:
    get:
      operationId: api_v1_markers_retrieve
      description: ViewSet for managing map markers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Marker.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkerLibrary'
          description: ''
    put:
      operationId: api_v1_markers_update
      description: ViewSet for managing map markers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Marker.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkerLibrary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MarkerLibrary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MarkerLibrary'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkerLibrary'
          description: ''
    patch:
      operationId: api_v1_markers_partial_update
      description: ViewSet for managing map markers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Marker.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMarkerLibrary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMarkerLibrary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMarkerLibrary'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkerLibrary'
          description: ''
    delete:
      operationId: api_v1_markers_destroy
      description: ViewSet for managing map markers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Marker.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/markers/upload_svg/:
    post:
      operationId: api_v1_markers_upload_svg_create
      description: Upload an SVG file to create a new marker.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkerLibrary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MarkerLibrary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MarkerLibrary'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkerLibrary'
          description: ''
  /api/v1/popup-templates/:
    get:
      operationId: api_v1_popup_templates_list
      description: ViewSet for managing popup templates.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPopupTemplateList'
          description: ''
    post:
      operationId: api_v1_popup_templates_create
      description: ViewSet for managing popup templates.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PopupTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PopupTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PopupTemplate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopupTemplate'
          description: ''
  /api/v1/popup-templates/{id}/:
    get:
      operationId: api_v1_popup_templates_retrieve
      description: ViewSet for managing popup templates.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Popup Template.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopupTemplate'
          description: ''
    put:
      operationId: api_v1_popup_templates_update
      description: ViewSet for managing popup templates.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Popup Template.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PopupTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PopupTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PopupTemplate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopupTemplate'
          description: ''
    patch:
      operationId: api_v1_popup_templates_partial_update
      description: ViewSet for managing popup templates.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Popup Template.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPopupTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPopupTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPopupTemplate'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopupTemplate'
          description: ''
    delete:
      operationId: api_v1_popup_templates_destroy
      description: ViewSet for managing popup templates.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Popup Template.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/popup-templates/{id}/preview/:
    get:
      operationId: api_v1_popup_templates_preview_retrieve
      description: Generate a preview of the template with sample data.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Popup Template.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopupTemplate'
          description: ''
  /api/v1/project-basemaps/:
    get:
      operationId: api_v1_project_basemaps_list
      description: ViewSet for managing project basemap associations.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectBasemapList'
          description: ''
    post:
      operationId: api_v1_project_basemaps_create
      description: ViewSet for managing project basemap associations.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectBasemap'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectBasemap'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectBasemap'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectBasemap'
          description: ''
  /api/v1/project-basemaps/{id}/:
    get:
      operationId: api_v1_project_basemaps_retrieve
      description: ViewSet for managing project basemap associations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Basemap.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectBasemap'
          description: ''
    put:
      operationId: api_v1_project_basemaps_update
      description: ViewSet for managing project basemap associations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Basemap.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectBasemap'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectBasemap'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectBasemap'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectBasemap'
          description: ''
    patch:
      operationId: api_v1_project_basemaps_partial_update
      description: ViewSet for managing project basemap associations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Basemap.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectBasemap'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectBasemap'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectBasemap'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectBasemap'
          description: ''
    delete:
      operationId: api_v1_project_basemaps_destroy
      description: ViewSet for managing project basemap associations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Basemap.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/project-basemaps/batch_update/:
    post:
      operationId: api_v1_project_basemaps_batch_update_create
      description: Batch update multiple project basemaps.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectBasemap'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectBasemap'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectBasemap'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectBasemap'
          description: ''
  /api/v1/project-layer-functions/:
    get:
      operationId: api_v1_project_layer_functions_list
      description: ViewSet for managing project layer functions.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectLayerFunctionList'
          description: ''
    post:
      operationId: api_v1_project_layer_functions_create
      description: ViewSet for managing project layer functions.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectLayerFunction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectLayerFunction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectLayerFunction'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLayerFunction'
          description: ''
  /api/v1/project-layer-functions/{id}/:
    get:
      operationId: api_v1_project_layer_functions_retrieve
      description: ViewSet for managing project layer functions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Layer Function.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLayerFunction'
          description: ''
    put:
      operationId: api_v1_project_layer_functions_update
      description: ViewSet for managing project layer functions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Layer Function.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectLayerFunction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectLayerFunction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectLayerFunction'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLayerFunction'
          description: ''
    patch:
      operationId: api_v1_project_layer_functions_partial_update
      description: ViewSet for managing project layer functions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Layer Function.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectLayerFunction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectLayerFunction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectLayerFunction'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLayerFunction'
          description: ''
    delete:
      operationId: api_v1_project_layer_functions_destroy
      description: ViewSet for managing project layer functions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Layer Function.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/project-tools/:
    get:
      operationId: api_v1_project_tools_list
      description: ViewSet for managing project tools.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectToolList'
          description: ''
    post:
      operationId: api_v1_project_tools_create
      description: ViewSet for managing project tools.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectTool'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectTool'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTool'
          description: ''
  /api/v1/project-tools/{id}/:
    get:
      operationId: api_v1_project_tools_retrieve
      description: ViewSet for managing project tools.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Tool.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTool'
          description: ''
    put:
      operationId: api_v1_project_tools_update
      description: ViewSet for managing project tools.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Tool.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectTool'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectTool'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTool'
          description: ''
    patch:
      operationId: api_v1_project_tools_partial_update
      description: ViewSet for managing project tools.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Tool.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectTool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectTool'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectTool'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTool'
          description: ''
    delete:
      operationId: api_v1_project_tools_destroy
      description: ViewSet for managing project tools.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Tool.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/project-tools/batch_update/:
    post:
      operationId: api_v1_project_tools_batch_update_create
      description: Batch update multiple project tools.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectTool'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectTool'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTool'
          description: ''
  /api/v1/projects/:
    get:
      operationId: api_v1_projects_list
      description: ViewSet for project management.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectList'
          description: ''
    post:
      operationId: api_v1_projects_create
      description: ViewSet for project management.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectCreateUpdate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCreateUpdate'
          description: ''
  /api/v1/projects/{id}/:
    get:
      operationId: api_v1_projects_retrieve
      description: ViewSet for project management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: api_v1_projects_update
      description: ViewSet for project management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectCreateUpdate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCreateUpdate'
          description: ''
    patch:
      operationId: api_v1_projects_partial_update
      description: ViewSet for project management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectCreateUpdate'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCreateUpdate'
          description: ''
    delete:
      operationId: api_v1_projects_destroy
      description: ViewSet for project management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/projects/{id}/clients/:
    get:
      operationId: api_v1_projects_clients_retrieve
      description: Return the clients associated with this project.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/v1/projects/{id}/clone/:
    post:
      operationId: api_v1_projects_clone_create
      description: Clone a project.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/v1/projects/{id}/stats/:
    get:
      operationId: api_v1_projects_stats_retrieve
      description: Get project statistics.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/v1/standalone/{hash_code}/:
    get:
      operationId: api_v1_standalone_retrieve
      description: |-
        Get complete project structure.
        Access via authenticated project_id or unauthenticated hash_code.
      parameters:
      - in: path
        name: hash_code
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/styles/:
    get:
      operationId: api_v1_styles_list
      description: ViewSet for managing style libraries.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStyleLibraryList'
          description: ''
    post:
      operationId: api_v1_styles_create
      description: ViewSet for managing style libraries.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StyleLibrary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StyleLibrary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StyleLibrary'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StyleLibrary'
          description: ''
  /api/v1/styles/{id}/:
    get:
      operationId: api_v1_styles_retrieve
      description: ViewSet for managing style libraries.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Style.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StyleLibrary'
          description: ''
    put:
      operationId: api_v1_styles_update
      description: ViewSet for managing style libraries.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Style.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StyleLibrary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StyleLibrary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StyleLibrary'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StyleLibrary'
          description: ''
    patch:
      operationId: api_v1_styles_partial_update
      description: ViewSet for managing style libraries.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Style.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStyleLibrary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStyleLibrary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStyleLibrary'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StyleLibrary'
          description: ''
    delete:
      operationId: api_v1_styles_destroy
      description: ViewSet for managing style libraries.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Style.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/styles/{id}/apply_to_layer/:
    post:
      operationId: api_v1_styles_apply_to_layer_create
      description: Apply this style to a layer.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Style.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StyleLibrary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StyleLibrary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StyleLibrary'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StyleLibrary'
          description: ''
  /api/v1/styles/{id}/generate_categorized/:
    post:
      operationId: api_v1_styles_generate_categorized_create
      description: Generate a categorized style based on property values.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Style.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StyleLibrary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StyleLibrary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StyleLibrary'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StyleLibrary'
          description: ''
  /api/v1/upload/:
    post:
      operationId: api_v1_upload_create
      description: Upload a geospatial file and check its CRS.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/users/:
    get:
      operationId: api_v1_users_list
      description: ViewSet for user management.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: api_v1_users_create
      description: ViewSet for user management.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/v1/users/{id}/:
    get:
      operationId: api_v1_users_retrieve
      description: ViewSet for user management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_v1_users_update
      description: ViewSet for user management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
    patch:
      operationId: api_v1_users_partial_update
      description: ViewSet for user management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdate'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
    delete:
      operationId: api_v1_users_destroy
      description: ViewSet for user management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/{id}/activity/:
    get:
      operationId: api_v1_users_activity_retrieve
      description: Get user activity history.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/{id}/change_password/:
    post:
      operationId: api_v1_users_change_password_create
      description: Change user password.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/me/:
    get:
      operationId: api_v1_users_me_retrieve
      description: Return the authenticated user's details.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    AuditLog:
      type: object
      description: Serializer for audit logs.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
        action:
          type: string
          readOnly: true
        action_details:
          readOnly: true
          nullable: true
        occurred_at:
          type: string
          format: date-time
          readOnly: true
        ip_address:
          type: string
          readOnly: true
          nullable: true
      required:
      - action
      - action_details
      - id
      - ip_address
      - occurred_at
      - username
    Basemap:
      type: object
      description: Serializer for basemap objects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        provider:
          $ref: '#/components/schemas/ProviderEnum'
        provider_display:
          type: string
          readOnly: true
        url_template:
          type: string
          nullable: true
          description: URL template with {x}, {y}, {z} placeholders for tile coordinates
          maxLength: 500
        options:
          description: Additional options for the tile layer (e.g., subdomains, min/max
            zoom)
        attribution:
          type: string
          nullable: true
          description: Attribution text required by the map provider
          maxLength: 255
        min_zoom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        max_zoom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_system:
          type: boolean
        created_by_user:
          type: integer
          nullable: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        preview_image_base64:
          type: string
          readOnly: true
      required:
      - created_at
      - created_by_username
      - id
      - name
      - preview_image_base64
      - provider_display
      - updated_at
    BasemapDetail:
      type: object
      description: Extended serializer for basemap details including projects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        provider:
          $ref: '#/components/schemas/ProviderEnum'
        provider_display:
          type: string
          readOnly: true
        url_template:
          type: string
          nullable: true
          description: URL template with {x}, {y}, {z} placeholders for tile coordinates
          maxLength: 500
        options:
          description: Additional options for the tile layer (e.g., subdomains, min/max
            zoom)
        attribution:
          type: string
          nullable: true
          description: Attribution text required by the map provider
          maxLength: 255
        min_zoom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        max_zoom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_system:
          type: boolean
        created_by_user:
          type: integer
          nullable: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        preview_image_base64:
          type: string
          readOnly: true
        projects:
          type: string
          readOnly: true
      required:
      - created_at
      - created_by_username
      - id
      - name
      - preview_image_base64
      - projects
      - provider_display
      - updated_at
    BasemapProviderEnum:
      enum:
      - google
      - google_satellite
      - openstreetmap
      - bing
      - esri
      - mapbox
      - carto
      - stamen
      - custom
      - wms
      - arcgis
      - blank
      type: string
      description: |-
        * `google` - Google Maps
        * `google_satellite` - Google Satellite
        * `openstreetmap` - OpenStreetMap
        * `bing` - Bing Maps
        * `esri` - ESRI
        * `mapbox` - Mapbox
        * `carto` - Carto
        * `stamen` - Stamen
        * `custom` - Custom Tiles
        * `wms` - WMS Service
        * `arcgis` - ArcGIS Online
        * `blank` - Blank Background
    Client:
      type: object
      description: Serializer for client objects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        contact_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        contact_phone:
          type: string
          nullable: true
          maxLength: 20
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    ClientDetail:
      type: object
      description: Detailed serializer for client objects with user count.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        contact_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        contact_phone:
          type: string
          nullable: true
          maxLength: 20
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user_count:
          type: string
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
      - user_count
    ClientProject:
      type: object
      description: Serializer for client projects.
      properties:
        id:
          type: integer
          readOnly: true
        client:
          type: integer
        project:
          type: integer
        project_name:
          type: string
          readOnly: true
        unique_link:
          type: string
          maxLength: 255
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        expires_at:
          type: string
          format: date-time
          nullable: true
        last_accessed:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - client
      - created_at
      - id
      - last_accessed
      - project
      - project_name
      - unique_link
    ColorPalette:
      type: object
      description: Serializer for color palette objects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        colors:
          description: List of colors in the palette
        palette_type:
          $ref: '#/components/schemas/PaletteTypeEnum'
        is_system:
          type: boolean
        created_by_user:
          type: integer
          nullable: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - created_by_username
      - id
      - name
      - updated_at
    Feature:
      type: object
      description: Full serializer for individual features with complete geometry.
      properties:
        id:
          type: integer
          readOnly: true
        project_layer:
          type: integer
        feature_id:
          type: string
          nullable: true
          maxLength: 255
        geometry: {}
        properties: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - geometry
      - id
      - project_layer
    FunctionTypeEnum:
      enum:
      - clustering
      - filtering
      - styling
      - analysis
      - labeling
      - heatmap
      - animation
      - interaction
      - format
      - transform
      type: string
      description: |-
        * `clustering` - Point Clustering
        * `filtering` - Feature Filtering
        * `styling` - Dynamic Styling
        * `analysis` - Data Analysis
        * `labeling` - Feature Labeling
        * `heatmap` - Heat Map
        * `animation` - Animation
        * `interaction` - Custom Interaction
        * `format` - Data Formatting
        * `transform` - Geometry Transform
    IconTypeEnum:
      enum:
      - image
      - svg
      - font
      - emoji
      - circle
      - custom
      type: string
      description: |-
        * `image` - Image
        * `svg` - SVG
        * `font` - Font Icon
        * `emoji` - Emoji
        * `circle` - Circle
        * `custom` - Custom HTML
    LayerFunction:
      type: object
      description: Serializer for layer function objects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        function_type:
          $ref: '#/components/schemas/FunctionTypeEnum'
        function_type_display:
          type: string
          readOnly: true
        function_config:
          description: Default configuration for the function
        is_system:
          type: boolean
        created_by_user:
          type: integer
          nullable: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - created_by_username
      - function_type_display
      - id
      - name
      - updated_at
    LayerFunctionDetail:
      type: object
      description: Extended serializer for layer function details including code.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        function_type:
          $ref: '#/components/schemas/FunctionTypeEnum'
        function_type_display:
          type: string
          readOnly: true
        function_config:
          description: Default configuration for the function
        is_system:
          type: boolean
        created_by_user:
          type: integer
          nullable: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        function_code:
          type: string
          writeOnly: true
          nullable: true
          description: JavaScript code implementing the function
      required:
      - created_at
      - created_by_username
      - function_type_display
      - id
      - name
      - updated_at
    LayerPermission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        project_layer:
          type: integer
        client_project:
          type: integer
        client_name:
          type: string
          readOnly: true
        project_name:
          type: string
          readOnly: true
        layer_name:
          type: string
          readOnly: true
        can_view:
          type: boolean
        can_edit:
          type: boolean
        can_export:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - client_name
      - client_project
      - created_at
      - id
      - layer_name
      - project_layer
      - project_name
      - updated_at
    LayerType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type_name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        default_style: {}
        icon_type:
          type: string
          nullable: true
          maxLength: 50
        icon_options: {}
        is_system:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - type_name
      - updated_at
    MapTool:
      type: object
      description: Serializer for map tool objects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        tool_type:
          $ref: '#/components/schemas/ToolTypeEnum'
        tool_type_display:
          type: string
          readOnly: true
        icon:
          type: string
          nullable: true
          maxLength: 100
        default_options:
          description: Default options for the tool
        ui_position:
          $ref: '#/components/schemas/UiPositionEnum'
        ui_position_display:
          type: string
          readOnly: true
        is_system:
          type: boolean
        created_by_user:
          type: integer
          nullable: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - created_by_username
      - id
      - name
      - tool_type_display
      - ui_position_display
      - updated_at
    MapToolDetail:
      type: object
      description: Extended serializer for map tool details including code.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        tool_type:
          $ref: '#/components/schemas/ToolTypeEnum'
        tool_type_display:
          type: string
          readOnly: true
        icon:
          type: string
          nullable: true
          maxLength: 100
        default_options:
          description: Default options for the tool
        ui_position:
          $ref: '#/components/schemas/UiPositionEnum'
        ui_position_display:
          type: string
          readOnly: true
        is_system:
          type: boolean
        created_by_user:
          type: integer
          nullable: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        tool_code:
          type: string
          writeOnly: true
          nullable: true
          description: JavaScript code implementing the tool
      required:
      - created_at
      - created_by_username
      - id
      - name
      - tool_type_display
      - ui_position_display
      - updated_at
    MarkerLibrary:
      type: object
      description: Serializer for marker library objects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        icon_url:
          type: string
          nullable: true
          maxLength: 255
        icon_type:
          $ref: '#/components/schemas/IconTypeEnum'
        default_options: {}
        default_size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Size in pixels
        default_anchor:
          type: string
          description: Anchor position (e.g., 'center', 'bottom')
          maxLength: 50
        default_color:
          type: string
          nullable: true
          description: Default color (e.g., '#FF5500')
          maxLength: 30
        is_system:
          type: boolean
        created_by_user:
          type: integer
          nullable: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        tags:
          type: string
          nullable: true
          description: Comma-separated tags for searching
          maxLength: 255
        category:
          type: string
          nullable: true
          maxLength: 100
        icon_data_base64:
          type: string
          readOnly: true
      required:
      - created_at
      - created_by_username
      - icon_data_base64
      - id
      - name
      - updated_at
    PaginatedAuditLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AuditLog'
    PaginatedBasemapList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Basemap'
    PaginatedClientDetailList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClientDetail'
    PaginatedClientProjectList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClientProject'
    PaginatedColorPaletteList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ColorPalette'
    PaginatedLayerFunctionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LayerFunction'
    PaginatedLayerPermissionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LayerPermission'
    PaginatedLayerTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LayerType'
    PaginatedMapToolList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MapTool'
    PaginatedMarkerLibraryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MarkerLibrary'
    PaginatedPopupTemplateList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PopupTemplate'
    PaginatedProjectBasemapList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectBasemap'
    PaginatedProjectLayerFunctionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectLayerFunction'
    PaginatedProjectLayerGroupList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectLayerGroup'
    PaginatedProjectLayerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectLayer'
    PaginatedProjectList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    PaginatedProjectToolList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectTool'
    PaginatedSimpleFeatureList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SimpleFeature'
    PaginatedStyleLibraryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StyleLibrary'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaletteTypeEnum:
      enum:
      - sequential
      - diverging
      - qualitative
      - custom
      type: string
      description: |-
        * `sequential` - Sequential
        * `diverging` - Diverging
        * `qualitative` - Qualitative
        * `custom` - Custom
    PatchedBasemap:
      type: object
      description: Serializer for basemap objects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        provider:
          $ref: '#/components/schemas/ProviderEnum'
        provider_display:
          type: string
          readOnly: true
        url_template:
          type: string
          nullable: true
          description: URL template with {x}, {y}, {z} placeholders for tile coordinates
          maxLength: 500
        options:
          description: Additional options for the tile layer (e.g., subdomains, min/max
            zoom)
        attribution:
          type: string
          nullable: true
          description: Attribution text required by the map provider
          maxLength: 255
        min_zoom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        max_zoom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_system:
          type: boolean
        created_by_user:
          type: integer
          nullable: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        preview_image_base64:
          type: string
          readOnly: true
    PatchedClient:
      type: object
      description: Serializer for client objects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        contact_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        contact_phone:
          type: string
          nullable: true
          maxLength: 20
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedClientProject:
      type: object
      description: Serializer for client projects.
      properties:
        id:
          type: integer
          readOnly: true
        client:
          type: integer
        project:
          type: integer
        project_name:
          type: string
          readOnly: true
        unique_link:
          type: string
          maxLength: 255
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        expires_at:
          type: string
          format: date-time
          nullable: true
        last_accessed:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedColorPalette:
      type: object
      description: Serializer for color palette objects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        colors:
          description: List of colors in the palette
        palette_type:
          $ref: '#/components/schemas/PaletteTypeEnum'
        is_system:
          type: boolean
        created_by_user:
          type: integer
          nullable: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedFeature:
      type: object
      description: Full serializer for individual features with complete geometry.
      properties:
        id:
          type: integer
          readOnly: true
        project_layer:
          type: integer
        feature_id:
          type: string
          nullable: true
          maxLength: 255
        geometry: {}
        properties: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedLayerFunction:
      type: object
      description: Serializer for layer function objects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        function_type:
          $ref: '#/components/schemas/FunctionTypeEnum'
        function_type_display:
          type: string
          readOnly: true
        function_config:
          description: Default configuration for the function
        is_system:
          type: boolean
        created_by_user:
          type: integer
          nullable: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedLayerPermission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        project_layer:
          type: integer
        client_project:
          type: integer
        client_name:
          type: string
          readOnly: true
        project_name:
          type: string
          readOnly: true
        layer_name:
          type: string
          readOnly: true
        can_view:
          type: boolean
        can_edit:
          type: boolean
        can_export:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedLayerType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type_name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        default_style: {}
        icon_type:
          type: string
          nullable: true
          maxLength: 50
        icon_options: {}
        is_system:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedMapTool:
      type: object
      description: Serializer for map tool objects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        tool_type:
          $ref: '#/components/schemas/ToolTypeEnum'
        tool_type_display:
          type: string
          readOnly: true
        icon:
          type: string
          nullable: true
          maxLength: 100
        default_options:
          description: Default options for the tool
        ui_position:
          $ref: '#/components/schemas/UiPositionEnum'
        ui_position_display:
          type: string
          readOnly: true
        is_system:
          type: boolean
        created_by_user:
          type: integer
          nullable: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedMarkerLibrary:
      type: object
      description: Serializer for marker library objects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        icon_url:
          type: string
          nullable: true
          maxLength: 255
        icon_type:
          $ref: '#/components/schemas/IconTypeEnum'
        default_options: {}
        default_size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Size in pixels
        default_anchor:
          type: string
          description: Anchor position (e.g., 'center', 'bottom')
          maxLength: 50
        default_color:
          type: string
          nullable: true
          description: Default color (e.g., '#FF5500')
          maxLength: 30
        is_system:
          type: boolean
        created_by_user:
          type: integer
          nullable: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        tags:
          type: string
          nullable: true
          description: Comma-separated tags for searching
          maxLength: 255
        category:
          type: string
          nullable: true
          maxLength: 100
        icon_data_base64:
          type: string
          readOnly: true
    PatchedPopupTemplate:
      type: object
      description: Serializer for popup template objects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        html_template:
          type: string
          description: HTML template with placeholders like {{field_name}}
        field_mappings:
          description: JSON mapping of template placeholders to feature properties
        css_styles:
          type: string
          nullable: true
          description: Optional CSS styles for the popup
        max_width:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Maximum width of the popup in pixels
        max_height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Maximum height of the popup in pixels
        include_zoom_to_feature:
          type: boolean
          description: Add a button to zoom to the feature
        is_system:
          type: boolean
        created_by_user:
          type: integer
          nullable: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedProjectBasemap:
      type: object
      description: Serializer for project basemap associations.
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: integer
        project_name:
          type: string
          readOnly: true
        basemap:
          type: integer
        basemap_name:
          type: string
          readOnly: true
        basemap_provider:
          allOf:
          - $ref: '#/components/schemas/BasemapProviderEnum'
          readOnly: true
        is_default:
          type: boolean
        display_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        custom_options:
          description: Project-specific options that override the basemap defaults
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedProjectCreateUpdate:
      type: object
      description: Serializer for creating and updating project objects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        is_public:
          type: boolean
        is_active:
          type: boolean
        default_center_lat:
          type: number
          format: double
        default_center_lng:
          type: number
          format: double
        default_zoom_level:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        map_controls: {}
        map_options: {}
        max_zoom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        min_zoom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
    PatchedProjectLayer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        project_layer_group:
          type: integer
        project_name:
          type: string
          readOnly: true
        layer_type:
          type: integer
        layer_type_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        style: {}
        z_index:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_visible_by_default:
          type: boolean
        min_zoom_visibility:
          type: integer
          maximum: 22
          minimum: 0
        max_zoom_visibility:
          type: integer
          maximum: 22
          minimum: 0
        marker_type:
          type: string
          nullable: true
          maxLength: 50
        marker_image_url:
          type: string
          nullable: true
          maxLength: 255
        marker_options: {}
        enable_clustering:
          type: boolean
        clustering_options: {}
        enable_labels:
          type: boolean
        label_options: {}
        feature_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          readOnly: true
        data_source:
          type: string
          nullable: true
          maxLength: 255
        attribution:
          type: string
          nullable: true
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        last_data_update:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedProjectLayerFunction:
      type: object
      description: Serializer for project layer function associations.
      properties:
        id:
          type: integer
          readOnly: true
        project_layer:
          type: integer
        layer_name:
          type: string
          readOnly: true
        layer_function:
          type: integer
        function_name:
          type: string
          readOnly: true
        function_type:
          allOf:
          - $ref: '#/components/schemas/FunctionTypeEnum'
          readOnly: true
        function_arguments:
          description: Arguments specific to this function instance
        enabled:
          type: boolean
        priority:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Priority for function execution order (higher = earlier)
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedProjectLayerGroup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        display_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_visible_by_default:
          type: boolean
        is_expanded_by_default:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        project:
          type: integer
    PatchedProjectTool:
      type: object
      description: Serializer for project tool associations.
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: integer
        project_name:
          type: string
          readOnly: true
        tool:
          type: integer
        tool_name:
          type: string
          readOnly: true
        tool_type:
          allOf:
          - $ref: '#/components/schemas/ToolTypeEnum'
          readOnly: true
        is_enabled:
          type: boolean
        display_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        tool_options:
          description: Project-specific tool options
        custom_position:
          type: string
          nullable: true
          description: Override the default UI position
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedStyleLibrary:
      type: object
      description: Serializer for style library objects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        style_definition:
          description: JSON style definition following Leaflet/Mapbox standards
        style_type:
          $ref: '#/components/schemas/StyleTypeEnum'
        is_system:
          type: boolean
        created_by_user:
          type: integer
          nullable: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        preview_image_base64:
          type: string
          readOnly: true
    PatchedUserUpdate:
      type: object
      description: Serializer for updating user objects.
      properties:
        email:
          type: string
          format: email
          nullable: true
          maxLength: 255
        full_name:
          type: string
          nullable: true
          maxLength: 255
        is_admin:
          type: boolean
    PopupTemplate:
      type: object
      description: Serializer for popup template objects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        html_template:
          type: string
          description: HTML template with placeholders like {{field_name}}
        field_mappings:
          description: JSON mapping of template placeholders to feature properties
        css_styles:
          type: string
          nullable: true
          description: Optional CSS styles for the popup
        max_width:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Maximum width of the popup in pixels
        max_height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Maximum height of the popup in pixels
        include_zoom_to_feature:
          type: boolean
          description: Add a button to zoom to the feature
        is_system:
          type: boolean
        created_by_user:
          type: integer
          nullable: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - created_by_username
      - html_template
      - id
      - name
      - updated_at
    Project:
      type: object
      description: Serializer for project objects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        is_public:
          type: boolean
        is_active:
          type: boolean
        default_center_lat:
          type: number
          format: double
        default_center_lng:
          type: number
          format: double
        default_zoom_level:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        map_controls: {}
        map_options: {}
        max_zoom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        min_zoom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by_user:
          type: integer
          nullable: true
        creator_username:
          type: string
          readOnly: true
      required:
      - created_at
      - creator_username
      - id
      - name
      - updated_at
    ProjectBasemap:
      type: object
      description: Serializer for project basemap associations.
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: integer
        project_name:
          type: string
          readOnly: true
        basemap:
          type: integer
        basemap_name:
          type: string
          readOnly: true
        basemap_provider:
          allOf:
          - $ref: '#/components/schemas/BasemapProviderEnum'
          readOnly: true
        is_default:
          type: boolean
        display_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        custom_options:
          description: Project-specific options that override the basemap defaults
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - basemap
      - basemap_name
      - basemap_provider
      - created_at
      - id
      - project
      - project_name
      - updated_at
    ProjectCreateUpdate:
      type: object
      description: Serializer for creating and updating project objects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        is_public:
          type: boolean
        is_active:
          type: boolean
        default_center_lat:
          type: number
          format: double
        default_center_lng:
          type: number
          format: double
        default_zoom_level:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        map_controls: {}
        map_options: {}
        max_zoom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        min_zoom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - id
      - name
    ProjectLayer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        project_layer_group:
          type: integer
        project_name:
          type: string
          readOnly: true
        layer_type:
          type: integer
        layer_type_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        style: {}
        z_index:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_visible_by_default:
          type: boolean
        min_zoom_visibility:
          type: integer
          maximum: 22
          minimum: 0
        max_zoom_visibility:
          type: integer
          maximum: 22
          minimum: 0
        marker_type:
          type: string
          nullable: true
          maxLength: 50
        marker_image_url:
          type: string
          nullable: true
          maxLength: 255
        marker_options: {}
        enable_clustering:
          type: boolean
        clustering_options: {}
        enable_labels:
          type: boolean
        label_options: {}
        feature_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          readOnly: true
        data_source:
          type: string
          nullable: true
          maxLength: 255
        attribution:
          type: string
          nullable: true
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        last_data_update:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - created_at
      - feature_count
      - id
      - last_data_update
      - layer_type
      - layer_type_name
      - name
      - project_layer_group
      - project_name
      - updated_at
    ProjectLayerFunction:
      type: object
      description: Serializer for project layer function associations.
      properties:
        id:
          type: integer
          readOnly: true
        project_layer:
          type: integer
        layer_name:
          type: string
          readOnly: true
        layer_function:
          type: integer
        function_name:
          type: string
          readOnly: true
        function_type:
          allOf:
          - $ref: '#/components/schemas/FunctionTypeEnum'
          readOnly: true
        function_arguments:
          description: Arguments specific to this function instance
        enabled:
          type: boolean
        priority:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Priority for function execution order (higher = earlier)
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - function_name
      - function_type
      - id
      - layer_function
      - layer_name
      - project_layer
      - updated_at
    ProjectLayerGroup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        display_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_visible_by_default:
          type: boolean
        is_expanded_by_default:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        project:
          type: integer
      required:
      - created_at
      - id
      - name
      - project
      - updated_at
    ProjectTool:
      type: object
      description: Serializer for project tool associations.
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: integer
        project_name:
          type: string
          readOnly: true
        tool:
          type: integer
        tool_name:
          type: string
          readOnly: true
        tool_type:
          allOf:
          - $ref: '#/components/schemas/ToolTypeEnum'
          readOnly: true
        is_enabled:
          type: boolean
        display_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        tool_options:
          description: Project-specific tool options
        custom_position:
          type: string
          nullable: true
          description: Override the default UI position
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - project
      - project_name
      - tool
      - tool_name
      - tool_type
      - updated_at
    ProviderEnum:
      enum:
      - google
      - google_satellite
      - openstreetmap
      - bing
      - esri
      - mapbox
      - carto
      - stamen
      - custom
      - wms
      - arcgis
      - blank
      type: string
      description: |-
        * `google` - Google Maps
        * `google_satellite` - Google Satellite
        * `openstreetmap` - OpenStreetMap
        * `bing` - Bing Maps
        * `esri` - ESRI
        * `mapbox` - Mapbox
        * `carto` - Carto
        * `stamen` - Stamen
        * `custom` - Custom Tiles
        * `wms` - WMS Service
        * `arcgis` - ArcGIS Online
        * `blank` - Blank Background
    SimpleFeature:
      type: object
      description: Lightweight serializer for listing features without full geometry.
      properties:
        id:
          type: integer
          readOnly: true
        feature_id:
          type: string
          nullable: true
          maxLength: 255
        geometry_type:
          type: string
          readOnly: true
        properties: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - geometry_type
      - id
    StyleLibrary:
      type: object
      description: Serializer for style library objects.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        style_definition:
          description: JSON style definition following Leaflet/Mapbox standards
        style_type:
          $ref: '#/components/schemas/StyleTypeEnum'
        is_system:
          type: boolean
        created_by_user:
          type: integer
          nullable: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        preview_image_base64:
          type: string
          readOnly: true
      required:
      - created_at
      - created_by_username
      - id
      - name
      - preview_image_base64
      - updated_at
    StyleTypeEnum:
      enum:
      - point
      - line
      - polygon
      - label
      - universal
      type: string
      description: |-
        * `point` - Point Style
        * `line` - Line Style
        * `polygon` - Polygon Style
        * `label` - Label Style
        * `universal` - Universal Style
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    ToolTypeEnum:
      enum:
      - measure_distance
      - measure_area
      - draw_point
      - draw_line
      - draw_polygon
      - export_data
      - print
      - search
      - select
      - edit
      - custom
      type: string
      description: |-
        * `measure_distance` - Measure Distance
        * `measure_area` - Measure Area
        * `draw_point` - Draw Point
        * `draw_line` - Draw Line
        * `draw_polygon` - Draw Polygon
        * `export_data` - Export Data
        * `print` - Print Map
        * `search` - Search Features
        * `select` - Select Features
        * `edit` - Edit Features
        * `custom` - Custom Tool
    UiPositionEnum:
      enum:
      - topright
      - topleft
      - bottomright
      - bottomleft
      - standalone
      type: string
      description: |-
        * `topright` - Top Right
        * `topleft` - Top Left
        * `bottomright` - Bottom Right
        * `bottomleft` - Bottom Left
        * `standalone` - Standalone/Floating
    User:
      type: object
      description: Serializer for user objects.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          maxLength: 255
        full_name:
          type: string
          nullable: true
          maxLength: 255
        is_admin:
          type: boolean
        client:
          type: integer
          nullable: true
        client_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - client_name
      - created_at
      - id
      - last_login
      - updated_at
      - username
    UserCreate:
      type: object
      description: Serializer for creating user objects.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          maxLength: 255
        full_name:
          type: string
          nullable: true
          maxLength: 255
        password:
          type: string
          writeOnly: true
        password_confirm:
          type: string
          writeOnly: true
        is_admin:
          type: boolean
        client:
          type: integer
          nullable: true
      required:
      - id
      - password
      - password_confirm
      - username
    UserUpdate:
      type: object
      description: Serializer for updating user objects.
      properties:
        email:
          type: string
          format: email
          nullable: true
          maxLength: 255
        full_name:
          type: string
          nullable: true
          maxLength: 255
        is_admin:
          type: boolean
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
